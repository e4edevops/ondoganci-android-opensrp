ext {
    getLocalProperty = { key ->
        if (properties != null && properties.containsKey(key)) {
            println(key + ": " + properties[key])
            return properties[key]
        } else {
            return "\"sample_property_value\""
        } }
}
description = 'OpenSRP immunization client library'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath 'org.apache.commons:commons-lang3:3.7'
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = jacocoVersion
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        mavenLocal()
    }
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "VACCINE_SYNC_TIME", '12'
        }

        debug {
            buildConfigField "int", "VACCINE_SYNC_TIME", '12'
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    // avoid errors with message 'Duplicate files copied in APK ...'
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

dependencies {
    implementation('org.smartregister:opensrp-client-core:1.10.1-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
    }

    implementation('org.smartregister:opensrp-client-native-form:1.7.32-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    testImplementation 'junit:junit:4.12'

    testImplementation('org.robolectric:robolectric:3.8') {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.apache.maven', module: 'maven-model'
        exclude group: 'com.thoughtworks.xstream', module: 'xstream'
    }

    testImplementation('org.robolectric:shadows-multidex:3.8') {
        exclude group: 'com.google.guava', module: 'guava'
    }

    testImplementation 'org.robolectric:shadows-support-v4:3.4-rc2'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'junit', module: 'junit'
    }
    // PowerMock
    def powerMockVersion = '1.7.1'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation("org.powermock:powermock-classloading-xstream:$powerMockVersion")
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.2.3'
    testImplementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
    sourceDirs = ["$project.projectDir/src/main/java"]
}
//apply from: '../maven.gradle'
