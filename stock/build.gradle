description = 'OpenSRP stock client library'

buildscript {
    repositories {
        jcenter()
        google()
        gradlePluginPortal()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"
    }
}

//plugins {
//    id 'com.android.library'
//    id 'org.smartregister.gradle.jarjar'
//    id 'com.github.kt3k.coveralls'
//}

apply plugin: 'com.android.library'
apply plugin: 'org.smartregister.gradle.jarjar'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = jacocoVersion
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    defaultPublishConfig !isReleaseBuild() ? "debug" : "release"

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
//        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    // avoid errors with message 'Duplicate files copied in APK ...'
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'licenses/javolution.license.TXT'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'androidsupportmultidexversion.txt'
        exclude("META-INF/*.kotlin_module")
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        maven { url 'https://dl.bintray.com/ibm-watson-health/ibm-fhir-server-releases' }
        mavenLocal()

        flatDir {
            dir 'aar'
        }
    }
}

dependencies {
    implementation('org.smartregister:opensrp-client-native-form:1.14.6.1-SNAPSHOT@aar') {
//        implementation('org.smartregister:opensrp-client-native-form:1.14.5.3-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'org.jacoco', module: 'org.jacoco.agent'
        exclude group: 'org.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support'
        exclude group: 'androidx.core', module: 'core'
    }

//    api('org.smartregister:opensrp-client-core:4.1.6-SNAPSHOT@aar') {
//        api('org.smartregister:opensrp-client-core:3.0.0-SNAPSHOT@aar') {
    api(name: 'opensrp-app-debug', ext: 'aar') {
        transitive true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.github.johnkil.print', module: 'print'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support'
        exclude group: 'androidx.core', module: 'core'
    }

    jarJar 'com.ibm.fhir:fhir-model:4.2.3'

    implementation fileTree(dir: "./build/libs", include: ['*.jar'])

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'net.zetetic:android-database-sqlcipher:4.1.3@aar'
    implementation 'com.jjoe64:graphview:4.2.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:core:1.0.0'
    testImplementation "org.robolectric:robolectric:4.4"
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'

    // PowerMock
    def powerMockVersion = '2.0.7'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"

    testImplementation 'org.mockito:mockito-core:2.28.2'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'androidx.annotation', module: 'annotation'
    })
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
    sourceDirs = ["$project.projectDir/src/main/java"]
}

//apply from: '../maven.gradle'
